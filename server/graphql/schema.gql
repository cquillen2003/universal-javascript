#Queries
type Query {
	users: [User!]!
	user(id: ID!): User
	appointments: [Appointment!]!
	resources: [Resource!]!
}

#Mutations
type Mutation {
	createJob(input: JobInput!): Job!
	updateJob(input: JobInput!): Job!
}

#Users
type User {
	id: ID!
	first_name: String!
	last_name: String!
}

#Jobs
type Job {
	id: ID!
	number: String
	customer: JobCustomer
	job_address: JobAddress
}

type JobCustomer {
	name: String!
}

type JobAddress {
	street: String!
}

input JobInput {
	customer: JobCustomerInput
	job_address: JobAddressInput
}

input JobCustomerInput {
	name: String!
}

input JobAddressInput {
	street: String!
}

#Appointments
type Appointment {
	id: ID!
	job: Job!
	start_time: String!
	duration: Int
	appointment_users: [AppointmentUser!]!
}

type AppointmentUser {
	resource_id: Int,
	user_id: Int,
	status_id: Int
}

#Resources
type Resource {
	id: ID!
	name: String!
	users: [User!]!
}

#Schema
schema {
	query: Query
	mutation: Mutation
}